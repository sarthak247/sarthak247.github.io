<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FastAPI on Sarthak Thakur</title>
    <link>http://localhost:1313/tags/fastapi/</link>
    <description>Recent content in FastAPI on Sarthak Thakur</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/fastapi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building Efficient ML APIs with FastAPI: A Comprehensive Guide - Part 2</title>
      <link>http://localhost:1313/blogs/fastapi2/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/fastapi2/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;../fastapi&#34;&gt;previous blog&lt;/a&gt;, I mentioned how I was able to make simple endpoints with FastAPI and how I was even able to use it to deploy a pretrained ML model. Moving forward, I will be discussing about how to make our FastAPI application more robust and efficient with some commonly used practices I found around the internet. Note that these are completely optional and for just deploying a model, even the previous blog will suffice. It&amp;rsquo;s just that I thought while I am at it, might just learn a bit more the best practices regarding FastAPI.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Efficient ML APIs with FastAPI: A Comprehensive Guide - Part 1</title>
      <link>http://localhost:1313/blogs/fastapi/</link>
      <pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/fastapi/</guid>
      <description>&lt;h2 id=&#34;introduction-to-fastapi&#34;&gt;Introduction to FastAPI&lt;/h2&gt;&#xA;&lt;p&gt;Today, I delved into FastAPI, a cutting-edge web framework designed for building APIs with Python. It piqued my interest because of its reputation for speed, ease of use, and robust integration with Python&amp;rsquo;s type system and also cause I have been looking for some time for a way to deploy my ML applications easily and with minimalistic code as I&amp;rsquo;m not a web developer and struggle with that part. Upon looking around on the internet, I discovered that people have been using something called &lt;code&gt;FastAPI&lt;/code&gt; along with &lt;code&gt;Streamlit&lt;/code&gt; for faster model deployment for demonstration purposes and so I decided to have a look at it. Hereâ€™s what I discovered about FastAPI and why it&amp;rsquo;s particularly compelling for developing APIs, especially for machine learning tasks.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
